name: Node.js Package

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions:
  contents: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Verify pnpm installation
        run: pnpm --version

      - name: Install dependencies
        run: pnpm install

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build NestJS app
        run: pnpm run build
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout respository
        uses: actions/checkout@v4
      - name: Deploy via ssh and docker
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{secrets.SERVER_PASSWORD}}
          script: |
            cd myprojects/
            if [ ! -d "discord-music-bot-nestjs" ]; then
              echo "Repository not found."
              git clone https://github.com/R1zd1ch/discord-music-bot-nestjs.git
            else
              echo "Repository already exists."
            fi
            cd discord-music-bot-nestjs
            ls -la
            git pull

            # Создание .env с корректным синтаксисом
            echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > .env
            echo "YANDEX_MUSIC_TOKEN=${{ secrets.YANDEX_MUSIC_TOKEN }}" >> .env
            echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

            docker-compose down
            docker-compose down --rmi all
            docker-compose up -d --build

          capture_stdout: true
