import { Injectable, Logger } from '@nestjs/common';
import { On, Once } from 'necord';

@Injectable()
export class DiscordBotService {
  private readonly logger = new Logger(DiscordBotService.name);

  @Once('ready')
  onReady() {
    this.logger.log('ü§ñ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
  }

  @On('error')
  onError(error: Error) {
    this.logger.error(
      `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ Discord –∫–ª–∏–µ–Ω—Ç–µ: ${error.message}`,
      error.stack,
    );

    if (
      error.message.includes('token') ||
      error.message.includes('authentication')
    ) {
      this.logger.fatal(
        '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫',
      );
    }
  }

  @On('warn')
  onWarn(message: string) {
    this.logger.warn(`–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç Discord –∫–ª–∏–µ–Ω—Ç–∞: ${message}`);
  }

  // @On('debug')
  // onDebug(message: string) {
  //   // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  //   // this.logger.debug(`Debug: ${message}`);
  // }
}
