import { Injectable } from '@nestjs/common';
import { EmbedBuilder } from 'discord.js';
import { Track } from 'yandex-music-client';
import { createTrackEmbed } from './embed.music-player';
import buttonsComponents from './buttons.components';
import { ResponseTrackType } from 'src/yandex-music/types/response-track.type';

@Injectable()
export class PlayerRendererService {
  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –ø–ª–µ–µ—Ä–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç—Ä–µ–∫–µ –∏ –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   * 
   * @param track - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Ç—Ä–µ–∫–µ
   * @param queueTrack - –ò—Å—Ö–æ–¥–Ω—ã–π –æ–±—ä–µ–∫—Ç —Ç—Ä–µ–∫–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
   * @param totalTracks - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏
   * @param nextTrack - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–∫–∞
   * @param isPaused - –§–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞—É–∑—ã
   * @returns –û–±—ä–µ–∫—Ç —Å embeds –∏ components –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
   */
  renderPlayer(
    track: ResponseTrackType,
    queueTrack: Track,
    totalTracks: number,
    nextTrack: string | undefined,
    isPaused: boolean = false,
  ) {
    const embed = createTrackEmbed(track, queueTrack, totalTracks, nextTrack);
    const components = buttonsComponents(isPaused);
    
    return {
      content: isPaused ? '‚è∏Ô∏è –ü–∞—É–∑–∞' : '‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è\n',
      embeds: [embed],
      components,
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—á–µ—Ä–µ–¥–∏ —Ç—Ä–µ–∫–æ–≤
   * 
   * @param queue - –ú–∞—Å—Å–∏–≤ —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏
   * @returns –û–±—ä–µ–∫—Ç —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
   */
  renderQueue(queue: Track[]) {
    if (queue.length === 0) {
      return {
        content: 'üì≠ –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞',
        components: [],
      };
    }
    
    const queueList = queue
      .map((track, index) => `${index + 1}. ${track.title}`)
      .join('\n');
    
    return {
      content: `üéµ –û—á–µ—Ä–µ–¥—å:\n${queueList}`,
      components: [],
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–≤—Ç–æ—Ä–∞
   * 
   * @param isRepeatEnabled - –§–ª–∞–≥ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∞
   * @returns –û–±—ä–µ–∫—Ç —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
   */
  renderRepeatStatus(isRepeatEnabled: boolean) {
    return {
      content: isRepeatEnabled ? 'üîÇ –ü–æ–≤—Ç–æ—Ä –≤–∫–ª—é—á–µ–Ω' : 'üîÅ –ü–æ–≤—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω',
      components: [],
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–∏ –æ—á–µ—Ä–µ–¥–∏
   * 
   * @returns –û–±—ä–µ–∫—Ç —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
   */
  renderShuffleStatus() {
    return {
      content: 'üîÄ –û—á–µ—Ä–µ–¥—å –ø–µ—Ä–µ–º–µ—à–∞–Ω–∞',
      components: [],
    };
  }
}common';
import { EmbedBuilder } from 'discord.js';
import { Track } from 'yandex-music-client';
import { createTrackEmbed } from './embed.music-player';
import buttonsComponents from './buttons.components';
import { ResponseTrackType } from 'src/yandex-music/types/response-track.type';

@Injectable()
export class PlayerRendererService {
  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –ø–ª–µ–µ—Ä–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç—Ä–µ–∫–µ –∏ –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   * 
   * @param track - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Ç—Ä–µ–∫–µ
   * @param queueTrack - –ò—Å—Ö–æ–¥–Ω—ã–π –æ–±—ä–µ–∫—Ç —Ç—Ä–µ–∫–∞ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
   * @param totalTracks - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏
   * @param nextTrack - –ù–∞–∑–≤–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–∫–∞
   * @param isPaused - –§–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞—É–∑—ã
   * @returns –û–±—ä–µ–∫—Ç —Å embeds –∏ components –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
   */
  renderPlayer(
    track: ResponseTrackType,
    queueTrack: Track,
    totalTracks: number,
    nextTrack: string | undefined,
    isPaused: boolean = false,
  ) {
    const embed = createTrackEmbed(track, queueTrack, totalTracks, nextTrack);
    const components = buttonsComponents(isPaused);
    
    return {
      content: isPaused ? '‚è∏Ô∏è –ü–∞—É–∑–∞' : '‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è\n',
      embeds: [embed],
      components,
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—á–µ—Ä–µ–¥–∏ —Ç—Ä–µ–∫–æ–≤
   * 
   * @param queue - –ú–∞—Å—Å–∏–≤ —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏
   * @returns –û–±—ä–µ–∫—Ç —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
   */
  renderQueue(queue: Track[]) {
    if (queue.length === 0) {
      return {
        content: 'üì≠ –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞',
        components: [],
      };
    }
    
    const queueList = queue
      .map((track, index) => `${index + 1}. ${track.title}`)
      .join('\n');
    
    return {
      content: `üéµ –û—á–µ—Ä–µ–¥—å:\n${queueList}`,
      components: [],
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –ø–æ–≤—Ç–æ—Ä–∞
   * 
   * @param isRepeatEnabled - –§–ª–∞–≥ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∞
   * @returns –û–±—ä–µ–∫—Ç —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
   */
  renderRepeatStatus(isRepeatEnabled: boolean) {
    return {
      content: isRepeatEnabled ? 'üîÇ –ü–æ–≤—Ç–æ—Ä –≤–∫–ª—é—á–µ–Ω' : 'üîÅ –ü–æ–≤—Ç–æ—Ä –≤—ã–∫–ª—é—á–µ–Ω',
      components: [],
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–∏ –æ—á–µ—Ä–µ–¥–∏
   * 
   * @returns –û–±—ä–µ–∫—Ç —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
   */
  renderShuffleStatus() {
    return {
      content: 'üîÄ –û—á–µ—Ä–µ–¥—å –ø–µ—Ä–µ–º–µ—à–∞–Ω–∞',
      components: [],
    };
  }
}